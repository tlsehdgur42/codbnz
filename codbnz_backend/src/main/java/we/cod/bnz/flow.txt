오후 2:51:02: Executing ':SettingApplication.main()'...


> Task :compileJava

> Task :processResources UP-TO-DATE
> Task :classes
warning: unknown enum constant When.MAYBE
  reason: class file for javax.annotation.meta.When not found
warning: unknown enum constant When.MAYBE
  reason: class file for javax.annotation.meta.When not found
warning: unknown enum constant When.MAYBE
  reason: class file for javax.annotation.meta.When not found
warning: unknown enum constant When.MAYBE
  reason: class file for javax.annotation.meta.When not found
warning: unknown enum constant When.MAYBE
  reason: class file for javax.annotation.meta.When not found
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
5 warnings

> Task :SettingApplication.main()
we.cod.bnz.account : BnzApplication : main
we.cod.bnz.account : BnzApplication : main

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2024-05-10T14:51:04.732+09:00  INFO 14312 --- [  restartedMain] com.oauth2.setting.SettingApplication    : Starting SettingApplication using Java 17.0.10 with PID 14312 (C:\Users\TJ\Desktop\login_sample\boilerplate-OAUTH2\build\classes\java\main started by TJ in C:\Users\TJ\Desktop\login_sample\boilerplate-OAUTH2)
2024-05-10T14:51:04.734+09:00 DEBUG 14312 --- [  restartedMain] com.oauth2.setting.SettingApplication    : Running with Spring Boot v3.2.5, Spring v6.1.6
2024-05-10T14:51:04.734+09:00  INFO 14312 --- [  restartedMain] com.oauth2.setting.SettingApplication    : No active profile set, falling back to 1 default profile: "default"
2024-05-10T14:51:04.773+09:00  INFO 14312 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-10T14:51:04.773+09:00  INFO 14312 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-10T14:51:05.386+09:00  INFO 14312 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-10T14:51:05.448+09:00  INFO 14312 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
2024-05-10T14:51:05.974+09:00  INFO 14312 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-05-10T14:51:05.984+09:00  INFO 14312 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-10T14:51:05.984+09:00  INFO 14312 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-10T14:51:06.032+09:00  INFO 14312 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-10T14:51:06.033+09:00  INFO 14312 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1260 ms
SecretKey : init
2024-05-10T14:51:06.153+09:00  INFO 14312 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-10T14:51:06.210+09:00  INFO 14312 --- [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-05-10T14:51:06.250+09:00  INFO 14312 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-10T14:51:06.495+09:00  INFO 14312 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-10T14:51:06.523+09:00  INFO 14312 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-05-10T14:51:06.751+09:00  INFO 14312 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@17ac2d06
2024-05-10T14:51:06.753+09:00  INFO 14312 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-05-10T14:51:07.448+09:00  INFO 14312 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-10T14:51:07.482+09:00  INFO 14312 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
QueryDslConfig : jpaRepository
2024-05-10T14:51:07.799+09:00 DEBUG 14312 --- [  restartedMain] c.o.setting.auth.JwtExceptionFilter      : Filter 'jwtExceptionFilter' configured for use
2024-05-10T14:51:07.800+09:00 DEBUG 14312 --- [  restartedMain] com.oauth2.setting.auth.JwtFilter        : Filter 'jwtFilter' configured for use
SecurityConfig : filterChain
SecurityConfig : cors
2024-05-10T14:51:08.162+09:00  INFO 14312 --- [  restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2ec3777c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35bf90c8, org.springframework.security.web.context.SecurityContextHolderFilter@69e8fff2, org.springframework.security.web.header.HeaderWriterFilter@444b15dd, org.springframework.web.filter.CorsFilter@7b918e1b, org.springframework.security.web.authentication.logout.LogoutFilter@388f7cee, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2576c9a5, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@7d0cdd79, com.oauth2.setting.auth.JwtExceptionFilter@4cf6bc98, com.oauth2.setting.auth.JwtFilter@453ee3ca, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@61a049fc, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@6d44a95b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f473372, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36316909, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58895b18, org.springframework.security.web.access.ExceptionTranslationFilter@577fab16, org.springframework.security.web.access.intercept.AuthorizationFilter@69be0f2c]
2024-05-10T14:51:08.319+09:00  INFO 14312 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-05-10T14:51:08.352+09:00  INFO 14312 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-05-10T14:51:08.360+09:00  INFO 14312 --- [  restartedMain] com.oauth2.setting.SettingApplication    : Started SettingApplication in 3.952 seconds (process running for 4.319)
we.cod.bnz.account : BnzApplication : run
Hibernate: 
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_img,
        a1_0.profile_msg,
        a1_0.provider,
        a1_0.username 
    from
        account a1_0 
    where
        a1_0.id=?
Account(username=admin)
Hibernate: 
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_img,
        a1_0.profile_msg,
        a1_0.provider,
        a1_0.username 
    from
        account a1_0 
    where
        a1_0.id=?
Account(username=2)
2024-05-10T14:51:12.330+09:00  INFO 14312 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-10T14:51:12.330+09:00  INFO 14312 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-05-10T14:51:12.331+09:00  INFO 14312 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
AccountQueryRepositoryImpl : findByUsername
Hibernate: 
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_img,
        a1_0.profile_msg,
        a1_0.provider,
        a1_0.username 
    from
        account a1_0 
    where
        a1_0.username=?
UserPrincipal : create account
SecretKey : getKey
AccessToken : AccessToken 생성용
UserPrincipal : getUsername
UserPrincipal : getUsername
AccessToken : createJwtAuthToken
UserPrincipal : getUsername
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate: 
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_img,
        a1_0.profile_msg,
        a1_0.provider,
        a1_0.username 
    from
        account a1_0 
    where
        a1_0.id=?
UserPrincipal : create account
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : getPassword
UserPrincipal : isAccountNonExpired
UserPrincipal : isCredentialsNonExpired
UserPrincipal : getAuthorities
UserPrincipal : isAccountNonLocked
UserPrincipal : getUsername







===================
로그인 후 새로고침

JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getName
admin
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAuthorities
UserPrincipal : isAccountNonLocked
UserPrincipal : isAccountNonExpired
UserPrincipal : isCredentialsNonExpired
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : getPassword
UserPrincipal : getUsername





===================
프로필 텍스트 수정 저장
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : isCredentialsNonExpired
UserPrincipal : isAccountNonExpired
UserPrincipal : getPassword
UserPrincipal : isAccountNonLocked
UserPrincipal : getAuthorities
UserPrincipal : getUsername
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : isCredentialsNonExpired
UserPrincipal : isAccountNonExpired
UserPrincipal : getPassword
UserPrincipal : isAccountNonLocked
UserPrincipal : getAuthorities
UserPrincipal : getUsername
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : isCredentialsNonExpired
UserPrincipal : isAccountNonExpired
UserPrincipal : getPassword
UserPrincipal : isAccountNonLocked
UserPrincipal : getAuthorities
UserPrincipal : getUsername
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : isCredentialsNonExpired
UserPrincipal : isAccountNonExpired
UserPrincipal : getPassword
UserPrincipal : isAccountNonLocked
UserPrincipal : getAuthorities
UserPrincipal : getUsername
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : isCredentialsNonExpired
UserPrincipal : isAccountNonExpired
UserPrincipal : getPassword
UserPrincipal : isAccountNonLocked
UserPrincipal : getAuthorities
UserPrincipal : getUsername
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
AccountService : getAccount
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : isCredentialsNonExpired
UserPrincipal : isAccountNonExpired
UserPrincipal : getPassword
UserPrincipal : isAccountNonLocked
UserPrincipal : getAuthorities
UserPrincipal : getUsername
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : isCredentialsNonExpired
UserPrincipal : isAccountNonExpired
UserPrincipal : getPassword
UserPrincipal : isAccountNonLocked
UserPrincipal : getAuthorities
UserPrincipal : getUsername
JwtExceptionFilter : doFilterInternal
JwtFilter : doFilterInternal
JwtFilter : resolveToken
SecretKey : getKey
AccessToken : AccessToken 확인용
AccessToken : getData
UserDetailsServiceImpl : loadUserByUsername
Hibernate:
    select
        a1_0.id,
        a1_0.account_role,
        a1_0.create_date,
        a1_0.email,
        a1_0.nickname,
        a1_0.password,
        a1_0.phone,
        a1_0.profile_IMG,
        a1_0.profile_MSG,
        a1_0.provider,
        a1_0.username
    from
        account a1_0
    where
        a1_0.id=?
UserPrincipal : create account
Account(username=admin)
LoginController : authTest
UserPrincipal : getUsername
UserPrincipal : getName
UserPrincipal : getAttributes
UserPrincipal : isEnabled
UserPrincipal : isCredentialsNonExpired
UserPrincipal : isAccountNonExpired
UserPrincipal : getPassword
UserPrincipal : isAccountNonLocked
UserPrincipal : getAuthorities
UserPrincipal : getUsername

