plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.5'
  id 'io.spring.dependency-management' version '1.1.4'
}

group = 'we.cod'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '17'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  //lombok
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  // data
  implementation group: 'org.hibernate', name: 'hibernate-core', version: '6.4.4.Final'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  // 어노테이션 종속성 추가
  implementation 'com.google.code.findbugs:jsr305:3.0.2'
  // io
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
  // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
  implementation 'org.apache.commons:commons-lang3:3.12.0'
  // QueryDsl
  implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
  annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor "jakarta.annotation:jakarta.annotation-api"
  annotationProcessor "jakarta.persistence:jakarta.persistence-api"
  // LOGIN
  implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
  implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
  runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
  // OAUTH
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  // web socket
//   implementation 'org.springframework.boot:spring-boot-starter-websocket'
  // kakao login
  // implementation "com.kakao.sdk:v2-user:2.20.1"
  // email
  // implementation 'org.springframework.boot:spring-boot-starter-mail'
  // runtimeOnly 'org.postgresql:postgresql'
  // test
  // testImplementation 'org.springframework.boot:spring-boot-starter-test'
  // testImplementation 'org.springframework.security:spring-security-test'
}

clean {
  delete file('src/main/generated')
}

//tasks.named('test') {
//  useJUnitPlatform()
//}
